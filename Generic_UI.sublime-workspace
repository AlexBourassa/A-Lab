{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"pa",
				"params	statement"
			],
			[
				"Py",
				"PyQtGraphWidget"
			]
		]
	},
	"buffers":
	[
		{
			"file": "Example.py",
			"settings":
			{
				"buffer_size": 7748,
				"line_ending": "Windows"
			}
		},
		{
			"file": "Module_Container.py",
			"settings":
			{
				"buffer_size": 11232,
				"line_ending": "Windows"
			}
		},
		{
			"file": "Widgets/GraphWidget/GraphWidget.py",
			"settings":
			{
				"buffer_size": 10669,
				"line_ending": "Windows"
			}
		},
		{
			"file": "test.json",
			"settings":
			{
				"buffer_size": 8040,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "# -*- coding: utf-8 -*-\n\"\"\"\n@author: AlexBourassa\n\n@brief: This class implements a widget which can display images either all at\n		once or using a raster scan mode.\n\"\"\"\n\nclass Graph2D(_gui.QWidget):\n	\"\"\"\n    This implements the generic structure of a 2d graph widget and gives\n    access to different attributes.\n    \"\"\"\n\n    def __init__(self, parent=None, **kwargs):\n        #super(GraphWidget, self).__init__(parent=parent)\n        _gui.QWidget.__init__(self, parent=parent)\n\n        #This variable will contain all the generic traces\n        self.traces = dict()\n        self.plugins = dict()\n\n        #Raise error is essential function not implemented\n        essential_methods = ['__iter__', '__len__', '__getitem__', '__setitem__',\n                             'addTrace', 'removeTrace', '_setTraceData', 'setTraceVisible']\n        for method in essential_methods:\n            if not method in dir(self):\n                raise NotImplementedError(method + \" not implemented in the subclass of GraphWidget\")\n         \n                \n        \n    def buildMenu(self):\n        \"\"\"\n        Build the menu for the QWidget\n        \"\"\"        \n        #Add a menu bar\n        self.menu = dict()\n        self.menu['_QMenuBar'] = _gui.QMenuBar()\n        self.widget_layout.insertWidget(0, self.menu['_QMenuBar'])\n        self.widget_layout.setContentsMargins(0,0,0,0)\n        \n        #Create a File Menu\n        self.menu['File'] = dict()\n        self.menu['File']['_QMenu'] = self.menu['_QMenuBar'].addMenu('File')\n        \n        #Add Actions\n        self.menu['File']['Hide'] = self.menu['File']['_QMenu'].addAction('Hide')\n        self.menu['File']['Hide'].triggered.connect(lambda: self.parent().hide())\n        \n    def addStandardPlugins(self):\n        #Add View Menu\n        self.plugins['View'] = Trace_View_Menu(self)\n        \n        #Add the transform menu\n        self.plugins['Transform_Menu'] = Transform_Menu(self)\n        \n        #Add a fitter\n        self.plugins['Fitter'] = Fitter(self, pen='g')\n        \n    def copyTrace(self, trace):\n        \"\"\"\n        This takes in a GraphTrace object and uses it to create a new trace\n        \"\"\"\n        x,y= trace.getData()\n        trc = self.addTrace(trace.name, x=x, y=y, **trace.kwargs)\n        trc.setTransform(trace.transform, transform_name = trace.transform_name)\n        return trc\n        \n    def getRegionData(self, trace_name, verbose=True, **kw):\n        x,y = self.traces[trace_name].getData(**kw)\n        if verbose:\n            print \"No getRegionData() function defined for this GraphWidget.  Returning all data...\"\n        return x,y\n        \n    def saveSettings(self, settingsObj = None, **kwargs):\n        if type(settingsObj) != _core.QSettings:\n            print \"No QSetting object was provided\"\n        else:\n            for plug_name in self.plugins:\n                settingsObj.beginGroup(plug_name)\n                self.plugins[plug_name].saveSettings(settingsObj)\n                settingsObj.endGroup()\n    \n    def loadSettings(self, settingsObj = None, **kwargs):\n        if type(settingsObj) != _core.QSettings:\n            print \"No QSetting object was provided\"\n        else:\n            for plug_name in self.plugins:\n                settingsObj.beginGroup(plug_name)\n                self.plugins[plug_name].loadSettings(settingsObj)\n                settingsObj.endGroup()    \n                \n    def save(self, file_handler = None, transformedData = True):\n		\"\"\"\n		@TODO\n		\"\"\"\n		return\n        \n    def load(self, file_handler = None):\n		\"\"\"\n		@TODO\n		\"\"\"\n		return",
			"file": "Widgets/Graph2D/Graph2D.py",
			"file_size": 193,
			"file_write_time": 130857189509843329,
			"settings":
			{
				"buffer_size": 3566,
				"line_ending": "Windows"
			}
		},
		{
			"file": "Module_Container_Plugins/Load_Save.py",
			"settings":
			{
				"buffer_size": 3936,
				"line_ending": "Windows"
			}
		},
		{
			"file": "Others/File_Handler.py",
			"settings":
			{
				"buffer_size": 5384,
				"line_ending": "Windows"
			}
		},
		{
			"file": "Others/Hiar_Storage.py",
			"settings":
			{
				"buffer_size": 8627,
				"line_ending": "Windows"
			}
		},
		{
			"file": "Others/Standard_File_Handlers.py",
			"settings":
			{
				"buffer_size": 7084,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "Packages/Python/Python.sublime-build",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/Java/Ant.sublime-build",
					""
				],
				[
					"Packages/Java/JavaC.sublime-build",
					""
				],
				[
					"Packages/SublimeREPL/sublimerepl_build_system_hack.sublime-build",
					""
				]
			],
			[
				"Packages/Java/JavaC.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				],
				[
					"Packages/SublimeREPL/sublimerepl_build_system_hack.sublime-build",
					""
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 261.0,
		"last_filter": "ipy",
		"selected_items":
		[
			[
				"ipy",
				"SublimeREPL: Python - IPython"
			],
			[
				"REPL: py",
				"SublimeREPL: Python"
			],
			[
				"REPL run",
				"SublimeREPL: Python - RUN current file"
			],
			[
				"ip",
				"SublimeREPL: Python - IPython"
			],
			[
				"error",
				"Anaconda: Show error list"
			],
			[
				"linter",
				"Anaconda: Next lint error"
			],
			[
				"ana",
				"Anaconda: Autoformat PEP8 Errors"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"pack",
				"Package Control: Install Package"
			]
		],
		"width": 400.0
	},
	"console":
	{
		"height": 126.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = 'eb2297e1a458f27d836c04bb0cbaf282' + 'd0e7a3098092775ccb37ca9d6b2e4b7d'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/C/Python27/Lib/site-packages/Generic_UI/Extras/PhoneSensors/SensorTCP.py",
		"/C/Python27/Lib/site-packages/Generic_UI/settings",
		"/C/Python27/Lib/site-packages/Generic_UI/ui_test2.json",
		"/C/Python27/Lib/site-packages/Generic_UI/Others/Standard_File_Handlers.py",
		"/C/Python27/Lib/site-packages/Generic_UI/Others/result.json",
		"/C/Python27/Lib/site-packages/Generic_UI/Others/test.json",
		"/C/Python27/lib/site-packages/IPython/kernel/inprocess/manager.py",
		"/C/Python27/lib/site-packages/IPython/kernel/manager.py",
		"/C/Python27/lib/site-packages/IPython/__init__.py",
		"/C/Python27/lib/site-packages/IPython/kernel/zmq/kernelapp.py",
		"/C/Python27/lib/site-packages/IPython/config/application.py",
		"/C/Users/Alex/AppData/Roaming/Sublime Text 3/Packages/User/Anaconda.sublime-settings",
		"/C/Users/Alex/Documents/IME/Code/Qubit Calculations/pre-design_calc.py",
		"/C/Users/Alex/Documents/IME/Code/Optical Mask/PrepareChips.py",
		"/C/Users/Alex/Documents/IME/Code/Optical Mask/slab/circuits/MaskMaker.py",
		"/C/Users/Alex/Documents/IME/Code/Optical Mask/MAIN.py",
		"/C/Users/Alex/Documents/Code/Generic_UI/Example.py",
		"/C/Users/Alex/Documents/IME/Code/Optical Mask/slab/circuits/mp_components.py",
		"/C/Users/Alex/Documents/IME/Code/Optical Mask/PrepareMasks.py",
		"/C/Users/Alex/AppData/Roaming/Sublime Text 3/Packages/Anaconda/README.md",
		"/C/Users/Alex/Desktop/Optical Mask/PrepareChips.py",
		"/C/Users/Alex/Desktop/Optical Mask/MAIN.py",
		"/C/Users/Alex/Desktop/Optical Mask/slab/__init__.py",
		"/C/Users/Alex/Desktop/Optical Mask/PrepareMasks.py",
		"/C/Users/Alex/Desktop/Optical Mask/circuits/Utilities.py",
		"/C/Users/Alex/Desktop/Optical Mask/circuits/mp_components.py",
		"/C/Users/Alex/Desktop/hello.py",
		"/C/Users/Alex/AppData/Roaming/Sublime Text 3/Packages/Anaconda/Anaconda.sublime-settings",
		"/C/Users/Alex/AppData/Roaming/Sublime Text 3/Packages/User/Python.sublime-settings",
		"/C/Users/Alex/AppData/Roaming/Sublime Text 3/Packages/User/Preferences.sublime-settings",
		"/C/Users/Alex/Desktop/colorswirl.c",
		"/C/Users/Alex/Desktop/Adalight-master/Processing/Adalight/Adalight.pde",
		"/C/Users/Alex/Desktop/README.txt",
		"/C/Users/Alex/Documents/Code/Java_TCPServer/ServerBoard.java",
		"/C/Users/Alex/Documents/Code/Java_TCPServer/TCPClient.java",
		"/C/Users/Alex/Documents/Code/Java_TCPServer/TCPServer.java",
		"/C/Users/Alex/Desktop/SensorUDP.py",
		"/C/Users/Alex/Documents/Code/Generic_UI/Widgets/GraphWidget/Transform_Menu.py",
		"/C/Users/Alex/Documents/Code/Generic_UI/Widgets/GraphWidget/GraphWidget.py",
		"/C/Users/Alex/Documents/Code/Generic_UI/Widgets/GraphWidget/GraphTrace.py",
		"/C/Users/Alex/Documents/Code/Generic_UI/Widgets/Devices/Test_Device.py",
		"/C/Python27/Lib/site-packages/spinmob/README.md",
		"/C/Users/Alex/Documents/Code/Generic_UI/Docked_Module.py",
		"/C/Users/Alex/Documents/Code/Generic_UI/Widgets/TraceManagerWidget.py",
		"/C/Users/Alex/Documents/Code/Generic_UI/Widgets/Load_Save_Widget.py",
		"/C/Users/Alex/Documents/Code/Generic_UI/Widgets/IPythonConsoleWidget.py",
		"/C/Users/Alex/Documents/Code/Generic_UI/Module_Container.py",
		"/C/Users/Alex/Documents/Code/Generic_UI/Module_Container_Plugins/Module_Container_Plugin.py",
		"/C/Users/Alex/Documents/Code/Generic_UI/Module_Container_Plugins/View_Menu.py",
		"/C/Users/Alex/Documents/Code/Generic_UI/Widgets/GraphWidget/Fitter.py",
		"/C/Users/Alex/Documents/Code/Generic_UI/Widgets/GraphWidget/Fitter_Eq.py",
		"/C/Users/Alex/Documents/Code/Generic_UI/Widgets/GraphWidget/Graph_Widget_Plugin.py",
		"/C/Users/Alex/Documents/Code/Generic_UI/Widgets/GraphWidget/Trace_View_Menu.py",
		"/C/Users/Alex/Documents/Code/Generic_UI/settings",
		"/C/Users/Alex/Desktop/temp.py",
		"/C/Python27/Lib/site-packages/spinmob/egg/examples/test.dat",
		"/C/Users/Alex/Desktop/test.py",
		"/C/Users/Alex/Documents/McGill/Code Tests/Example.py",
		"/C/Python27/Scripts/ipython2-script.py",
		"/C/Users/Alex/.ipython/profile_default/ipython_qtconsole_config.py",
		"/C/Users/Alex/.ipython/profile_default/security/kernel-example.json",
		"/C/Python27/Lib/site-packages/spyderlib/interpreter.py",
		"/C/Users/Alex/Documents/McGill/Code Tests/GraphModules.py",
		"/C/Users/Alex/Documents/McGill/Code Tests/settings",
		"/C/Users/Alex/Documents/McGill/Code Tests/Generic_Module.py",
		"/C/Users/Alex/.ipython/profile_default/ipython_config.py",
		"/C/Python27/Lib/site-packages/IPython/qt/console/mainwindow.py",
		"/C/Python27/Scripts/test.json",
		"/C/Users/Alex/.ipython/profile_default/startup/README",
		"/C/Python27/Scripts/ipython-script.py",
		"/C/Users/Alex/.ipython/profile_default/security/kernel-13024.json",
		"/C/Users/Alex/.ipython/profile_default/security/kernel-13444.json",
		"/C/Users/Alex/.ipython/profile_default/security/kernel-5956.json",
		"/C/Users/Alex/.ipython/profile_default/security/kernel-6244.json",
		"/E/Users/Alexandre/Documents/McGill/EPFL/K-lab/Code/dev/All/Data_Analyser/Data_Analyser.py",
		"/C/Users/Alex/Documents/McGill/Code Tests/QtVariant.py",
		"/E/Users/Alexandre/Documents/McGill/SankeyLab/Before 2014/Code/CavityFitting/FctTester.py",
		"/C/Users/Alex/Downloads/PyInterp-master/PyInterp-master/__init__.py",
		"/C/Python27/Scripts/spyder",
		"/C/Python27/Scripts/spyder_win_post_install.py",
		"/C/Python27/Scripts/spyder.bat",
		"/C/Users/Alex/Documents/McGill/EE_Semester_8/PHYS-362 Statistical Mechanics/ps8/ps8.py"
	],
	"find":
	{
		"height": 34.0
	},
	"find_in_files":
	{
		"height": 90.0,
		"where_history":
		[
			"*.py,C:\\Users\\Alex\\Documents\\Code\\Generic_UI",
			"-*.py,C:\\Users\\Alex\\Documents\\Code\\Generic_UI"
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			",",
			"{",
			"signal_",
			"launch",
			"dp",
			"CPWStraight",
			"c_mr_mr",
			"qubit_empty",
			"bend_leg_radius",
			"mr_",
			"mr_bender_leg_length",
			"view_name",
			"two_layer",
			"show_structure",
			"wafer_mask_base",
			"wafer_base_mask",
			"chip_base",
			"chips[0]",
			"wafer_masks",
			"slab",
			"; ",
			";",
			"newData",
			"Alex",
			"size",
			"exitfunc",
			"WidgetProxy",
			"is_defined",
			"isdefined",
			"ClassName",
			"#"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			";\\n",
			"signal_newData",
			"AlexBourassa"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "Example.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7748,
						"regions":
						{
						},
						"selection":
						[
							[
								7726,
								7726
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true,
							"word_wrap": false
						},
						"translation.x": 0.0,
						"translation.y": 2236.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "Module_Container.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 11232,
						"regions":
						{
						},
						"selection":
						[
							[
								6183,
								6183
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": -0.0,
						"translation.y": 219.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "Widgets/GraphWidget/GraphWidget.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10669,
						"regions":
						{
						},
						"selection":
						[
							[
								833,
								5538
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1913.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "test.json",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8040,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JSON.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "Widgets/Graph2D/Graph2D.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3566,
						"regions":
						{
						},
						"selection":
						[
							[
								3539,
								3539
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "Module_Container_Plugins/Load_Save.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3936,
						"regions":
						{
						},
						"selection":
						[
							[
								364,
								364
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": -0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "Others/File_Handler.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5384,
						"regions":
						{
						},
						"selection":
						[
							[
								199,
								199
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "Others/Hiar_Storage.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8627,
						"regions":
						{
						},
						"selection":
						[
							[
								678,
								678
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "Others/Standard_File_Handlers.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7084,
						"regions":
						{
						},
						"selection":
						[
							[
								349,
								349
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 23.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 169.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "Generic_UI.sublime-project",
	"replace":
	{
		"height": 42.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"C:\\Users\\Alex\\Documents\\McGill\\Code Tests\\Example.py"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 150.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
